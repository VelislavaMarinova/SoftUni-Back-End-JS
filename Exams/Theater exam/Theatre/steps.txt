1. Get resources
2. npm i
3. npm start check if it works
4. database.js: chande db name
!!! NO .STATIC
5. main.hbs: replace main layout:
    - session: res.locals -username;
    - main.hbs: if username
    - main.hbs error message from parseError: {{#if errors}}

USER MODEL
authController: register email/username/password??? username/password
userService: register  email/password ??  username/password 

6. Register: 
  Register.hbs
    - method="post"
    - name="";
    - value="{{body.username}}" - NO VALUE to password and repass
authController.js:
    - check redirect to and is it need to login and redirect to homepage
    - check validation requirements fo register input and correct them in userSchema
    - requirments about password are not in the userSchema but in authConroller
    - redirect to...
7. Login.hbs
    - method="post"
    - name="";
    - value="{{body.username}}" - NO VALUE to password and repass
    authController.js:
    - redirect to...
CHECK register,login,logout and validation!
8. main.hbs: Add links in navbar;
9.homeController.js
    - if there are very different views for user and guest, render two different views
10. Model
   - required true is done by using minlength or validator regex
11. SthService
    - createPage
12. sthController
13. Connect sthController with routrer:  app.use('/sth',sthController);
GUARDS!!!
-router: isUser(): /sth
-authController isGuest(): get/post register,login
14. create.hbs: 
    - method="post"
    - value="{{body.sth}}"
    - textarea: No value but as a text content {{body.text}}
CHECK if pass empty imput error messages to be ok!
15.Catalog Page/Home Page if catalog is in home Page;
16. Details Page
    - sthController: get for details must be after all get!!
    - sthService: getByID NB! .lean()
    -logic about buttons: isOwner, and +
17.sthService: delete sth
18. sthController: get delete
19.sthController get Edit
20.sthController post Edit
21. sthService post Edit
22.Details Extra button logic
BONUS
23.Search
 - input field: name="search" value:"{{search}}"
 - search bar is in the home.hbs => use homeController.get...
 - homeController.get: log(req.query) => returns what we write in search bar: { search: 'bau' }
 - const search = Object.values(req.query).join()
   - FILTER : const filteredCourses = courses.filter(x => x.title.toLowerCase().includes(search.toLowerCase()));
   - REGEX : const regex = new RegExp(search, "i");
            const filteredCourses = courses.filter(x => regex.test(x.title));

 